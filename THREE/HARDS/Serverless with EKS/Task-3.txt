#
# Task 3
#
Troubleshoot no DNS RESOLUTION

# Atualizar a imagem do deployment para debugar com busybox:
kubectl edit deployment/<deployment-name> --record=true

# Conectar no POD:
kubectl exec -it <pod-name> -- /bin/bash

# Se der erro de binary not found in $PATH: 
# Troque a imagem para o busybox. 

# Verifique os status dos pods:
kubectl get pods 
kubectl get pods --all-namespaces
kubectl get pods -ALL
kubectl get pods --ALL
kubectl get pods -A
kubectl get pods -a
kubectl get pods -all
kubectl get pods --all 

# Cheque se o DNS está funcionando corretamente:
kubectl exec -t -t pod-name -- nslookup kubernetes.default
kubectl exec -it busybox -n batches -- nslookup www.google.com

# Se aparecer falha: 

# Cheque o DNS local:
kubectl exec -ti pod-name -- cat /etc/resolv.conf

# Se aparecer erros como: nslookup: can't resolve 'kubernetes.default' 
# Cheque se o POD DNS está rodando
kubectl get pods --namespace=kube-system -l k8s-app=kube-dns

# Cheque erros no DNS POD:
kubectl logs --namespace=kube-system -l k8s-app=kube-dns

# Verifique se o serviço está rodando: 
kubectl get svc --namespace=kube-system
-------------------
# Verifique se o Endpoints DNS estão expostos:
kubectl get endpoints kube-dns --namespace=kube-system
--------------------
# Adicione o nome log no Confimap do coredns:

kubectl -n kube-system edit configmap coredns 


# Na seção: Corefile: | 
#               .53 {
#                    Log 
#}

--------------
# Está no certo namesapce para o serviço?:
kubectl exec -i -t pod-name -- nslookup service-name
EX: kubectl exec -i -t dnsutils -- nslookup servico44

# Isso especifica o namespace:
kubectl exec -i -t dnsutils -- nslookup service-name.namespace
EX: kubectl exec -t -t dnsutils -- nslookup servico44.kube-system

-------------------
PROBLEMAS COMUNS:
Some Linux distributions (e.g. Ubuntu) use a local DNS resolver by default (systemd-resolved). Systemd-resolved moves and replaces /etc/resolv.conf with a stub file that can cause a fatal forwarding loop when resolving names in upstream servers. This can be fixed manually by using kubelet's --resolv-conf flag to point to the correct resolv.conf (With systemd-resolved, this is /run/systemd/resolve/resolv.conf). kubeadm automatically detects systemd-resolved, and adjusts the kubelet flags accordingly.